{"ast":null,"code":"var _jsxFileName = \"C:\\\\anudip\\\\budgetmate\\\\frontend\\\\src\\\\pages\\\\AddTransaction.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport api from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CATEGORIES = [\"food\", \"travel\", \"bills\", \"recharge\", \"rent\", \"loan\", \"donations\", \"savings\", \"other\"];\nexport default function AddTransaction() {\n  _s();\n  const [goals, setGoals] = useState([]);\n  const [form, setForm] = useState({\n    amount: \"\",\n    category: \"food\",\n    date: \"\",\n    notes: \"\",\n    goal_id: \"\"\n  });\n  useEffect(() => {\n    api.get(\"/goals\").then(res => setGoals(res.data));\n  }, []);\n  const handleChange = e => setForm({\n    ...form,\n    [e.target.name]: e.target.value\n  });\n  const submit = async e => {\n    e.preventDefault();\n    await api.post(\"/transactions\", {\n      ...form,\n      amount: Number(form.amount),\n      goal_id: form.category === \"savings\" && form.goal_id ? Number(form.goal_id) : null\n    });\n    alert(\"Transaction added\");\n    setForm({\n      amount: \"\",\n      category: \"food\",\n      date: \"\",\n      notes: \"\",\n      goal_id: \"\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: submit,\n          className: \"flex\",\n          style: {\n            flexDirection: \"column\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"amount\",\n            placeholder: \"Amount\",\n            value: form.amount,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"category\",\n            value: form.category,\n            onChange: handleChange,\n            children: CATEGORIES.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: c,\n              children: c\n            }, c, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 36\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), form.category === \"savings\" && /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"goal_id\",\n            value: form.goal_id,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Select Goal (optional) --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this), goals.map(g => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: g.id,\n              children: g.goal_name\n            }, g.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"date\",\n            value: form.date,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"notes\",\n            placeholder: \"Notes (optional)\",\n            value: form.notes,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(AddTransaction, \"071zliDMlwOFk0Ub77Ag9/Wy33Y=\");\n_c = AddTransaction;\nvar _c;\n$RefreshReg$(_c, \"AddTransaction\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","api","jsxDEV","_jsxDEV","CATEGORIES","AddTransaction","_s","goals","setGoals","form","setForm","amount","category","date","notes","goal_id","get","then","res","data","handleChange","e","target","name","value","submit","preventDefault","post","Number","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","style","flexDirection","type","placeholder","onChange","required","map","c","g","id","goal_name","_c","$RefreshReg$"],"sources":["C:/anudip/budgetmate/frontend/src/pages/AddTransaction.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport api from \"../utils/api\";\n\nconst CATEGORIES = [\"food\",\"travel\",\"bills\",\"recharge\",\"rent\",\"loan\",\"donations\",\"savings\",\"other\"];\n\nexport default function AddTransaction() {\n  const [goals, setGoals] = useState([]);\n  const [form, setForm] = useState({ amount:\"\", category:\"food\", date:\"\", notes:\"\", goal_id:\"\" });\n\n  useEffect(()=>{\n    api.get(\"/goals\").then(res => setGoals(res.data));\n  },[]);\n\n  const handleChange = (e) => setForm({...form, [e.target.name]: e.target.value });\n  const submit = async (e) => {\n    e.preventDefault();\n    await api.post(\"/transactions\", {...form, amount: Number(form.amount), goal_id: form.category===\"savings\" && form.goal_id? Number(form.goal_id) : null });\n    alert(\"Transaction added\");\n    setForm({ amount:\"\", category:\"food\", date:\"\", notes:\"\", goal_id:\"\" });\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"container\">\n        <div className=\"card\">\n          <h2>Add Transaction</h2>\n          <form onSubmit={submit} className=\"flex\" style={{flexDirection:\"column\"}}>\n            <input type=\"number\" name=\"amount\" placeholder=\"Amount\" value={form.amount} onChange={handleChange} required/>\n            <select name=\"category\" value={form.category} onChange={handleChange}>\n              {CATEGORIES.map(c => <option key={c} value={c}>{c}</option>)}\n            </select>\n            {form.category===\"savings\" && (\n              <select name=\"goal_id\" value={form.goal_id} onChange={handleChange}>\n                <option value=\"\">-- Select Goal (optional) --</option>\n                {goals.map(g => <option key={g.id} value={g.id}>{g.goal_name}</option>)}\n              </select>\n            )}\n            <input type=\"date\" name=\"date\" value={form.date} onChange={handleChange} required/>\n            <textarea name=\"notes\" placeholder=\"Notes (optional)\" value={form.notes} onChange={handleChange} />\n            <button type=\"submit\">Save</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}